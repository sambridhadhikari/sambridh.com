apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
data:
  .dockerconfigjson: {{ template "imagePullSecret" . }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      {{ if .Values.registry }}
      imagePullSecrets:
        - name: {{ .Values.name }}
      {{ end }}
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.repository }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  selector:
    app: {{ .Values.name }}
  ports:
    - port: 80
      targetPort: 80
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  ingressClassName: ingress-nginx
  tls:
    - secretName: "tls-{{ .Values.name }}"
      hosts:
      {{- range $item := .Values.host }}
        - "{{ $item }}"
      {{- end }}
  rules:
    {{ range $item := .Values.host }}
    - host: {{ $item }}
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ $.Values.name }}
                port:
                  number: 80
    {{ end }}